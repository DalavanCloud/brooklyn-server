<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>brooklyn</groupId>
	<artifactId>brooklyn-all</artifactId>
	<packaging>pom</packaging>
	<name>brooklyn-all</name>
	<version>0.0.1-SNAPSHOT</version>
	<description>Brooklyn Parent</description>

	<build>
        <testSourceDirectory>src/test/java</testSourceDirectory>
 
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>${gmaven.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.gmaven.runtime</groupId>
							<artifactId>gmaven-runtime-1.7</artifactId>
							<version>${gmaven.version}</version>
							<exclusions>
								<exclusion>
									<groupId>org.codehaus.groovy</groupId>
									<artifactId>groovy-all</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-all</artifactId>
							<version>${groovy.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.4</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.felix</groupId>
										<artifactId>maven-bundle-plugin</artifactId>
										<versionRange>[2.3.4,)</versionRange>
										<goals>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmaven</groupId>
										<artifactId>gmaven-plugin</artifactId>
										<versionRange>[1.3,)</versionRange>
										<goals>
                                            <goal>generateStubs</goal>
                                            <goal>generateTestStubs</goal>
                                            <goal>compile</goal>
                                            <goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <forkMode>always</forkMode>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>generateStubs</goal>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <fileset>
                                    <directory>${pom.basedir}/src/main/java</directory>
                                    <includes>
                                        <include>**/*.groovy</include>
                                    </includes>
                                </fileset>
                            </sources>
                            <providerSelection>1.7</providerSelection>
                        </configuration>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <goals>
                            <goal>generateTestStubs</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <fileset>
                                    <directory>${pom.basedir}/src/test/java</directory>
                                    <includes>
                                        <include>**/*.groovy</include>
                                    </includes>
                                </fileset>
                            </sources>
                            <providerSelection>1.7</providerSelection>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
		<profile>
			<id>Brooklyn</id>
	
			<modules>
                		<module>parent</module>
               			<module>api</module>
				<module>core</module>
				<module>extra</module>
				<module>web-console</module>
			</modules>
		</profile>

		<profile>
			<id>CI</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>2.3.2</version>
						<configuration>
						  <xmlOutput>true</xmlOutput>
						  <xmlOutputDirectory>target/site</xmlOutputDirectory>
						</configuration>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>findbugs</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>2.5</version>
						<inherited>true</inherited>
						<configuration>
							<failOnViolation>false</failOnViolation>
							<linkXref>true</linkXref>
							<sourceEncoding>utf-8</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<targetJdk>1.6</targetJdk>
							<excludes>
								<exclude>**/*Test.java</exclude>
								<exclude>**/tests/**/*.java</exclude>
								<!-- add any more generated source code directories here -->
							</excludes>
							<excludeRoots>
								<excludeRoot>${pom.basedir}/target/generated-sources/groovy-stubs/main</excludeRoot>
							</excludeRoots>
						</configuration>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>check</goal>
									<goal>cpd-check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>	
		<profile>
			<id>Coverage</id>
			<dependencies>
				<dependency>
					<groupId>net.sourceforge.cobertura</groupId>
					<artifactId>cobertura</artifactId>
                    <version>${cobertura.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>instrument classes</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>process-test-classes</phase>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
										<taskdef resource="tasks.properties" classpathref="maven.plugin.classpath" />
										<if>
											<available property="gogocobertura" file="target/test-classes" />
											<then>
												<echo message="INSTRUMENTING CLASSES FOR COBERTURA" />
												<!-- Ensure any and all bits of our project are copied in first -->
												<copy todir="target/cobertura/coverage-classes">
													<fileset erroronmissingdir="false" dir="target/classes"/>
												</copy>
												<cobertura-instrument datafile="target/cobertura/cobertura.ser" todir="target/cobertura/coverage-classes">
													<fileset erroronmissingdir="false" dir="target/classes">
														<include name="brooklyn/**/*.class" />
														<exclude name="brooklyn/**/*Test.class" />
													</fileset>
													<fileset erroronmissingdir="false" dir="target/cobertura/dependency-classes">
														<include name="brooklyn/**/*.class" />
														<exclude name="brooklyn/**/*Test.class" />
													</fileset>
												</cobertura-instrument>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>coverage report</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
										<taskdef resource="tasks.properties" classpathref="maven.plugin.classpath" />
										<if>
											<available property="gogocobertura" file="target/cobertura/cobertura.ser" />
											<then>
												<echo message="GENERATING COBERTURA COVERAGE REPORT" />
												<cobertura-report format="xml" destdir="target/site/cobertura" datafile="target/cobertura/cobertura.ser">
													<fileset erroronmissingdir="false" dir="src/java" />
													<fileset erroronmissingdir="false" dir="target/cobertura/dependency-sources" />
												</cobertura-report>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-launcher</artifactId>
								<version>1.8.2</version>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant</artifactId>
								<version>1.8.2</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.cobertura</groupId>
								<artifactId>cobertura</artifactId>
								<version>${cobertura.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-coverage-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<classifier>sources</classifier>
									<includeScope>compile</includeScope>
									<includeGroupIds>brooklyn</includeGroupIds>
									<outputDirectory>${project.build.directory}/cobertura/dependency-sources</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>unpack-coverage-classes</id>
								<phase>compile</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<type>jar</type>
									<includeScope>compile</includeScope>
									<includeGroupIds>brooklyn</includeGroupIds>
									<outputDirectory>${project.build.directory}/cobertura/dependency-classes</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${surefire.version}</version>
						<inherited>true</inherited>
						<configuration>
							<forkMode>always</forkMode>
							<reportFormat>xml</reportFormat>
							<classesDirectory>${project.build.directory}/cobertura/coverage-classes</classesDirectory>
							<systemProperties>
								<property>
									<name>net.sourceforge.cobertura.datafile</name>
									<value>${project.build.directory}/cobertura/cobertura.ser</value>
								</property>
								<property>
									<name>cobertura.user.java.nio</name>
									<value>false</value>
								</property>
							</systemProperties>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${groovy.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.gmaven.runtime</groupId>
            <artifactId>gmaven-runtime-1.7</artifactId>
            <version>${gmaven.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
    </dependencies>

	<properties>
		<gmaven.version>1.3</gmaven.version>
		<groovy.version>1.8.0</groovy.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <cobertura.version>1.9.4.1</cobertura.version>
        <surefire.version>2.8.1</surefire.version>
	</properties>
</project>
