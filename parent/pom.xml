<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>brooklyn</groupId>
	<artifactId>brooklyn-parent</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Brooklyn Parent</name>

	<description>
        The parent for Brooklyn modules
    </description>

	<url>http://brooklyn</url>

	<scm>
		<connection>scm:git:git://github.com/cloudsoft/brooklyn.git</connection>
		<developerConnection>scm:git:git@github.com:cloudsoft/brooklyn.git</developerConnection>
		<url>http://github.com/cloudsoft/brooklyn</url>
	</scm>

	<licenses>
		<license>
			<name>TBD</name>
			<distribution>repo</distribution>
			<url>http://TBD</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Brooklyn committers</name>
		</developer>
	</developers>

	<properties>
		<test.directory>${pom.basedir}/src/test</test.directory>
		<groovy.version>1.8.0</groovy.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cobertura.version>1.9.4.1</cobertura.version>
		<surefire.version>2.8.1</surefire.version>
		<junit.version>4.8.2</junit.version>
		<mockito.version>1.8.4</mockito.version>
		<mortbay.jetty.version>6.1.26</mortbay.jetty.version>
		<slf4j.version>1.5.10</slf4j.version>
		<jsch.version>0.1.44-1</jsch.version>
		<xstream.version>1.3.1</xstream.version>
		<jansi.version>1.2.1</jansi.version>
		<guava.version>r09</guava.version>
		<ivy.version>2.2.0</ivy.version>
	</properties>

	<!-- <selenium.java.client.version>1.0.1</selenium.java.client.version> 
		<selenium.maven.plugin.version>1.1</selenium.maven.plugin.version> -->

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.ivy</groupId>
				<artifactId>ivy</artifactId>
				<version>${ivy.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${jsch.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>org.fusesource.jansi</groupId>
				<artifactId>jansi</artifactId>
				<version>${jansi.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<testSourceDirectory>${test.directory}/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>${test.directory}/resources</directory>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<compilerId>groovy-eclipse-compiler</compilerId>
						<verbose>false</verbose>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-compiler</artifactId>
							<version>2.5.1-M3</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-batch</artifactId>
							<version>1.8.0-03</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<links>
							<link>http://download.oracle.com/javaee/6/api</link>
						</links>
						<keywords>true</keywords>
						<author>true</author>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.4</version>
					<extensions>true</extensions>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.version}</version>
					<configuration>
						<forkMode>always</forkMode>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.9</version>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<inherited>true</inherited>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.felix</groupId>
										<artifactId>maven-bundle-plugin</artifactId>
										<versionRange>[2.3.4,)</versionRange>
										<goals>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>enforce</id>
						<!-- discard rules from weld-parent -->
						<phase>none</phase>
					</execution>
					<execution>
						<id>brooklyn-build-req</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<inherited>true</inherited>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>1.6.0</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>[3.0.0,)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- TODO For selenium, look at https://github.com/seam/parent/blob/master/pom.xml -->
	<profiles>
		<profile>
			<id>CI</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>2.3.2</version>
						<configuration>
							<xmlOutput>true</xmlOutput>
							<xmlOutputDirectory>target/site</xmlOutputDirectory>
						</configuration>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>findbugs</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>2.5</version>
						<inherited>true</inherited>
						<configuration>
							<failOnViolation>false</failOnViolation>
							<linkXref>true</linkXref>
							<sourceEncoding>utf-8</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<targetJdk>1.6</targetJdk>
							<excludes>
								<exclude>**/*Test.java</exclude>
								<exclude>**/tests/**/*.java</exclude>
								<!-- add any more generated source code directories here -->
							</excludes>
							<excludeRoots>
								<excludeRoot>${pom.basedir}/target/generated-sources/groovy-stubs/main</excludeRoot>
							</excludeRoots>
						</configuration>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>check</goal>
									<goal>cpd-check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Integration</id>
			<properties>
				<test.directory>${pom.basedir}/src/integration</test.directory>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Coverage</id>
			<dependencies>
				<dependency>
					<groupId>net.sourceforge.cobertura</groupId>
					<artifactId>cobertura</artifactId>
					<version>${cobertura.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>instrument classes</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>process-test-classes</phase>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties"
											classpathref="maven.plugin.classpath" />
										<taskdef resource="tasks.properties" classpathref="maven.plugin.classpath" />
										<if>
											<available property="gogocobertura" file="target/test-classes" />
											<then>
												<echo message="INSTRUMENTING CLASSES FOR COBERTURA" />
												<!-- Ensure any and all bits of our project are copied in first -->
												<copy todir="target/cobertura/coverage-classes">
													<fileset erroronmissingdir="false" dir="target/classes" />
												</copy>
												<cobertura-instrument datafile="target/cobertura/cobertura.ser"
													todir="target/cobertura/coverage-classes">
													<fileset erroronmissingdir="false" dir="target/classes">
														<include name="org/overpaas/**/*.class" />
														<exclude name="org/overpaas/**/*Test.class" />
													</fileset>
													<fileset erroronmissingdir="false"
														dir="target/cobertura/dependency-classes">
														<include name="org/overpaas/**/*.class" />
														<exclude name="org/overpaas/**/*Test.class" />
													</fileset>
												</cobertura-instrument>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>coverage report</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties"
											classpathref="maven.plugin.classpath" />
										<taskdef resource="tasks.properties" classpathref="maven.plugin.classpath" />
										<if>
											<available property="gogocobertura"
												file="target/cobertura/cobertura.ser" />
											<then>
												<echo message="GENERATING COBERTURA COVERAGE REPORT" />
												<cobertura-report format="xml"
													destdir="target/site/cobertura" datafile="target/cobertura/cobertura.ser">
													<fileset erroronmissingdir="false" dir="src/java" />
													<fileset erroronmissingdir="false"
														dir="target/cobertura/dependency-sources" />
												</cobertura-report>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-launcher</artifactId>
								<version>1.8.2</version>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant</artifactId>
								<version>1.8.2</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.cobertura</groupId>
								<artifactId>cobertura</artifactId>
								<version>${cobertura.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-coverage-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<classifier>sources</classifier>
									<includeScope>compile</includeScope>
									<includeGroupIds>org.overpaas</includeGroupIds>
									<outputDirectory>${project.build.directory}/cobertura/dependency-sources
                                    </outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>unpack-coverage-classes</id>
								<phase>compile</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<type>jar</type>
									<includeScope>compile</includeScope>
									<includeGroupIds>org.overpaas</includeGroupIds>
									<outputDirectory>${project.build.directory}/cobertura/dependency-classes
                                    </outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<inherited>true</inherited>
						<configuration>
							<forkMode>always</forkMode>
							<reportFormat>xml</reportFormat>
							<classesDirectory>${project.build.directory}/cobertura/coverage-classes</classesDirectory>
							<systemProperties>
								<property>
									<name>net.sourceforge.cobertura.datafile</name>
									<value>${project.build.directory}/cobertura/cobertura.ser</value>
								</property>
								<property>
									<name>cobertura.user.java.nio</name>
									<value>false</value>
								</property>
							</systemProperties>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
