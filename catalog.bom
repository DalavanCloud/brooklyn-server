brooklyn.catalog:
  version: "2.0.0-SNAPSHOT"
  iconUrl: https://raw.githubusercontent.com/docker-library/docs/c350af05d3fac7b5c3f6327ac82fe4d990d8729c/docker/logo.png

  publish:
    description:  Resources for working with Docker containers from Apache Brooklyn
    license_code: Apache-2.0
    overview:     README.md
    qa:           catalog.tests.bom

  items:
  - id:           docker-engine
    description:  The engine for running Docker containers
    itemType:     entity
    item:

      name: Docker Engine (host)
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess

      brooklyn.config:
        dontRequireTtyForSudo: true

      brooklyn.parameters:
      - name: docker.port
        description: The docker TCP port to listen on.
        type: port
        default: 2375
      - name: docker.bindaddress
        description: The docker network address to to listen on.
        type: string
        default: 0.0.0.0

      brooklyn.enrichers:
      - type: org.apache.brooklyn.enricher.stock.Transformer
        brooklyn.config:
          uniqueTag: docker-endpoint-generator
          enricher.triggerSensors:
          - host.name
          - docker.port
          enricher.sourceSensor: $brooklyn:sensor("docker.port")
          enricher.targetSensor: $brooklyn:sensor("docker.endpoint")
          enricher.targetValue:
            $brooklyn:formatString:
            - "tcp://%s:%s/"
            - $brooklyn:attributeWhenReady("host.name")
            - $brooklyn:attributeWhenReady("docker.port")

      shell.env:
        DOCKER_PORT: $brooklyn:config("docker.port")
        DOCKER_BINDADDRESS: $brooklyn:config("docker.bindaddress")

      install.command: |
        sudo yum -y update
        sudo tee /etc/yum.repos.d/docker.repo <<-'EOF'
        [dockerrepo]
        name=Docker Repository
        baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
        enabled=1
        gpgcheck=1
        gpgkey=https://yum.dockerproject.org/gpg
        EOF
        sudo yum -y install docker-engine

        echo "Enabling TCP-access to docker engine on tcp://${DOCKER_BINDADDRESS}:${DOCKER_PORT}"
        sudo mkdir -p /etc/systemd/system/docker.service.d
        sudo tee /etc/systemd/system/docker.service.d/docker.conf <<-EOF
        [Service]
        ExecStart=
        ExecStart=ExecStart=/usr/bin/docker daemon -H tcp://${DOCKER_BINDADDRESS}:${DOCKER_PORT}
        EOF
        sudo systemctl daemon-reload

      launch.command:       sudo service docker start
      stop.command:         sudo service docker stop
      checkRunning.command: sudo service docker status

      provisioning.properties:
        osFamily: centos

      # ensure docker running before starting children
      childStartMode: foreground_late

  - id: docker-engine-container
    description: An easy way to launch a Docker container, as a child of a docker-engine entity
    itemType: entity
    item:
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess

      brooklyn.config:
        dontRequireTtyForSudo: true

      # TODO support DSL in name: $brooklyn:formatString("Container (%s)", $brooklyn:config("container"))
      # TODO advertise container id as a sensor.
      # TODO assumes that parent entity will be docker-engine (so can lookup docker.port config; see BROOKLYN-267)
      name: Container
      shell.env:
        DOCKER_IMAGE: $brooklyn:config("container")
        DOCKER_PORT: $brooklyn:config("docker.port")
        DOCKER_HOST:
          $brooklyn:formatString:
          - "tcp://127.0.0.1:%s/"
          - $brooklyn:parent().config("docker.port")
      launch.command: |
        docker run -d ${DOCKER_IMAGE}
      brooklyn.parameters:
      - name: container
        type: string

